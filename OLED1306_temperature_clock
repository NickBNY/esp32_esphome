esphome:
  name: fireplace
  friendly_name: AirQuality


esp32:
  board: esp32dev
  framework:
    type: arduino

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: ""

ota:
  - platform: esphome
    password: ""

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

################################################
#                     START                    #
################################################
# Define fonts to be used on the display with different sizes
font:
  - file: "ARIAL.TTF"
    id: font1
    size: 12
  - file: "ARIAL.TTF"
    id: font2
    size: 36
  - file: "ARIAL.TTF"
    id: font3
    size: 14
  - file: "ARIAL.TTF"
    id: font4
    size: 8

# UART configuration (example: for debugging or additional sensors)
uart:
  rx_pin: GPIO25
  baud_rate: 9600

# Synchronize time with Home Assistant
time:
  - platform: homeassistant
    id: esptime

################################################
#                     I2C                      #
################################################
# Define two separate I2C buses for different peripherals

# Bus A: Used for the SSD1306 display
i2c:
  - id: bus_a
    sda: GPIO33
    scl: GPIO22
    scan: true
    frequency: 300kHz

  # Bus B: Used for sensors (e.g. AHT10 and ENS160)
  - id: bus_b
    sda: GPIO19
    scl: GPIO23
    scan: true
    # Uncomment and adjust the options below if needed:
    # active: true
    # interval: 1100ms
    # window: 1100ms

################################################
#                   SENSORS                    #
################################################
sensor:
  # AHT10/AHT20 sensor for indoor temperature and humidity
  - platform: aht10
    variant: AHT20
    i2c_id: bus_b
    address: 0x38
    update_interval: 60s
    temperature:
      name: "Indoor Temperature"
      id: temperature
      device_class: temperature
      state_class: measurement
      accuracy_decimals: 0   # Show no decimals
      filters:
        - median:
            window_size: 5
            send_every: 5
            send_first_at: 1
    humidity:
      name: "Indoor Humidity"
      id: humidity
      device_class: humidity
      state_class: measurement
      accuracy_decimals: 0   # Show no decimals
      filters:
        - median:
            window_size: 5
            send_every: 5
            send_first_at: 1

  # ENS160 sensor for CO2, VOC, and overall air quality (AQI)
  - platform: ens160_i2c
    i2c_id: bus_b
    update_interval: 60s
    address: 0x53
    eco2:
      name: "CO2"
    tvoc:
      name: "VOC"
    aqi:
      name: "Air Quality"

  # PM1006 sensor for PM2.5 measurements
  - platform: pm1006
    pm_2_5:
      name: "Ikea PM25"
      # Uncomment below to enable a sliding window moving average filter:
      # sliding_window_moving_average:
      #   window_size: 10
      #   send_every: 10

  # Home Assistant sensors integrated for additional data

  - platform: homeassistant
    id: inside_temperature
    entity_id: sensor.hot_tub_current_temperature
    internal: true
    accuracy_decimals: 0

  - platform: homeassistant
    id: outside_temperature
    entity_id: sensor.hot_tub_target_temperature
    internal: true
    accuracy_decimals: 0

  - platform: homeassistant
    id: gust
    entity_id: sensor.266_home_wind
    internal: true
    accuracy_decimals: 0

  - platform: homeassistant
    id: temp
    name: "temp"
    entity_id: sensor.266_home_realfeel_temperature
    internal: true
    accuracy_decimals: 0

  - platform: homeassistant
    id: pm
    name: "pm"
    entity_id: sensor.fireplace_ikea_pm25
    internal: true

################################################
#                TEXT SENSORS                #
################################################
text_sensor:
  - platform: homeassistant
    id: current
    entity_id: weather.266_home
    internal: true

################################################
#                  DISPLAY                   #
################################################
# SSD1306 display configuration using I2C bus A.
display:
  - platform: ssd1306_i2c
    i2c_id: bus_a
    model: "SH1106 128x64"
    reset_pin: GPIO26
    address: 0x3C
    lambda: |-
      // Display the current weather text (centered)
      it.printf(64, 15, id(font1), TextAlign::TOP_CENTER, "%s", id(current).state.c_str());
      
      // Display the current time in HH:MM format (bottom-left)
      it.strftime(0, 60, id(font2), TextAlign::BASELINE_LEFT, "%H:%M", id(esptime).now());
      
      // Display the indoor temperature if available (top-right)
      if (id(inside_temperature).has_state()) {
        it.printf(127, 30, id(font3), TextAlign::TOP_RIGHT, "%.0f°", id(inside_temperature).state);
      }
      
      // Display the outside temperature if available (bottom-right)
      if (id(outside_temperature).has_state()) {
        it.printf(127, 60, id(font3), TextAlign::BASELINE_RIGHT, "%.0f°", id(outside_temperature).state);
      }
      
      // Display the current date (month/day) at the top-left
      it.strftime(0, 0, id(font1), TextAlign::TOP_LEFT, "%m/%d", id(esptime).now());
      
      // Display wind information (gust) near the top-left
      it.printf(95, 0, id(font1), TextAlign::TOP_LEFT, "w: %.1f", id(gust).state);
      
      // Display real feel temperature (temp) at the center-top
      it.printf(58, 0, id(font1), TextAlign::TOP_CENTER, "%.0f°", id(temp).state);
      
      // Display PM2.5 value at the top-left (overlapping text may occur; adjust coordinates as needed)
      it.printf(0, 15, id(font1), TextAlign::TOP_LEFT, "%.1f", id(pm).state);
